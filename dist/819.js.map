{"version":3,"file":"819.js","mappings":"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","sources":["webpack://webpack-boilerplate/./node_modules/gsap/dist/ScrollToPlugin.js","webpack://webpack-boilerplate/./node_modules/howler/dist/howler.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.window = global.window || {}));\n}(this, (function (exports) { 'use strict';\n\n\t/*!\n\t * ScrollToPlugin 3.12.5\n\t * https://gsap.com\n\t *\n\t * @license Copyright 2008-2024, GreenSock. All rights reserved.\n\t * Subject to the terms at https://gsap.com/standard-license or for\n\t * Club GSAP members, the agreement issued with that membership.\n\t * @author: Jack Doyle, jack@greensock.com\n\t*/\n\tvar gsap,\n\t    _coreInitted,\n\t    _window,\n\t    _docEl,\n\t    _body,\n\t    _toArray,\n\t    _config,\n\t    ScrollTrigger,\n\t    _windowExists = function _windowExists() {\n\t  return typeof window !== \"undefined\";\n\t},\n\t    _getGSAP = function _getGSAP() {\n\t  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n\t},\n\t    _isString = function _isString(value) {\n\t  return typeof value === \"string\";\n\t},\n\t    _isFunction = function _isFunction(value) {\n\t  return typeof value === \"function\";\n\t},\n\t    _max = function _max(element, axis) {\n\t  var dim = axis === \"x\" ? \"Width\" : \"Height\",\n\t      scroll = \"scroll\" + dim,\n\t      client = \"client\" + dim;\n\t  return element === _window || element === _docEl || element === _body ? Math.max(_docEl[scroll], _body[scroll]) - (_window[\"inner\" + dim] || _docEl[client] || _body[client]) : element[scroll] - element[\"offset\" + dim];\n\t},\n\t    _buildGetter = function _buildGetter(e, axis) {\n\t  var p = \"scroll\" + (axis === \"x\" ? \"Left\" : \"Top\");\n\n\t  if (e === _window) {\n\t    if (e.pageXOffset != null) {\n\t      p = \"page\" + axis.toUpperCase() + \"Offset\";\n\t    } else {\n\t      e = _docEl[p] != null ? _docEl : _body;\n\t    }\n\t  }\n\n\t  return function () {\n\t    return e[p];\n\t  };\n\t},\n\t    _clean = function _clean(value, index, target, targets) {\n\t  _isFunction(value) && (value = value(index, target, targets));\n\n\t  if (typeof value !== \"object\") {\n\t    return _isString(value) && value !== \"max\" && value.charAt(1) !== \"=\" ? {\n\t      x: value,\n\t      y: value\n\t    } : {\n\t      y: value\n\t    };\n\t  } else if (value.nodeType) {\n\t    return {\n\t      y: value,\n\t      x: value\n\t    };\n\t  } else {\n\t    var result = {},\n\t        p;\n\n\t    for (p in value) {\n\t      result[p] = p !== \"onAutoKill\" && _isFunction(value[p]) ? value[p](index, target, targets) : value[p];\n\t    }\n\n\t    return result;\n\t  }\n\t},\n\t    _getOffset = function _getOffset(element, container) {\n\t  element = _toArray(element)[0];\n\n\t  if (!element || !element.getBoundingClientRect) {\n\t    return console.warn(\"scrollTo target doesn't exist. Using 0\") || {\n\t      x: 0,\n\t      y: 0\n\t    };\n\t  }\n\n\t  var rect = element.getBoundingClientRect(),\n\t      isRoot = !container || container === _window || container === _body,\n\t      cRect = isRoot ? {\n\t    top: _docEl.clientTop - (_window.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n\t    left: _docEl.clientLeft - (_window.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0)\n\t  } : container.getBoundingClientRect(),\n\t      offsets = {\n\t    x: rect.left - cRect.left,\n\t    y: rect.top - cRect.top\n\t  };\n\n\t  if (!isRoot && container) {\n\t    offsets.x += _buildGetter(container, \"x\")();\n\t    offsets.y += _buildGetter(container, \"y\")();\n\t  }\n\n\t  return offsets;\n\t},\n\t    _parseVal = function _parseVal(value, target, axis, currentVal, offset) {\n\t  return !isNaN(value) && typeof value !== \"object\" ? parseFloat(value) - offset : _isString(value) && value.charAt(1) === \"=\" ? parseFloat(value.substr(2)) * (value.charAt(0) === \"-\" ? -1 : 1) + currentVal - offset : value === \"max\" ? _max(target, axis) - offset : Math.min(_max(target, axis), _getOffset(value, target)[axis] - offset);\n\t},\n\t    _initCore = function _initCore() {\n\t  gsap = _getGSAP();\n\n\t  if (_windowExists() && gsap && typeof document !== \"undefined\" && document.body) {\n\t    _window = window;\n\t    _body = document.body;\n\t    _docEl = document.documentElement;\n\t    _toArray = gsap.utils.toArray;\n\t    gsap.config({\n\t      autoKillThreshold: 7\n\t    });\n\t    _config = gsap.config();\n\t    _coreInitted = 1;\n\t  }\n\t};\n\n\tvar ScrollToPlugin = {\n\t  version: \"3.12.5\",\n\t  name: \"scrollTo\",\n\t  rawVars: 1,\n\t  register: function register(core) {\n\t    gsap = core;\n\n\t    _initCore();\n\t  },\n\t  init: function init(target, value, tween, index, targets) {\n\t    _coreInitted || _initCore();\n\t    var data = this,\n\t        snapType = gsap.getProperty(target, \"scrollSnapType\");\n\t    data.isWin = target === _window;\n\t    data.target = target;\n\t    data.tween = tween;\n\t    value = _clean(value, index, target, targets);\n\t    data.vars = value;\n\t    data.autoKill = !!value.autoKill;\n\t    data.getX = _buildGetter(target, \"x\");\n\t    data.getY = _buildGetter(target, \"y\");\n\t    data.x = data.xPrev = data.getX();\n\t    data.y = data.yPrev = data.getY();\n\t    ScrollTrigger || (ScrollTrigger = gsap.core.globals().ScrollTrigger);\n\t    gsap.getProperty(target, \"scrollBehavior\") === \"smooth\" && gsap.set(target, {\n\t      scrollBehavior: \"auto\"\n\t    });\n\n\t    if (snapType && snapType !== \"none\") {\n\t      data.snap = 1;\n\t      data.snapInline = target.style.scrollSnapType;\n\t      target.style.scrollSnapType = \"none\";\n\t    }\n\n\t    if (value.x != null) {\n\t      data.add(data, \"x\", data.x, _parseVal(value.x, target, \"x\", data.x, value.offsetX || 0), index, targets);\n\n\t      data._props.push(\"scrollTo_x\");\n\t    } else {\n\t      data.skipX = 1;\n\t    }\n\n\t    if (value.y != null) {\n\t      data.add(data, \"y\", data.y, _parseVal(value.y, target, \"y\", data.y, value.offsetY || 0), index, targets);\n\n\t      data._props.push(\"scrollTo_y\");\n\t    } else {\n\t      data.skipY = 1;\n\t    }\n\t  },\n\t  render: function render(ratio, data) {\n\t    var pt = data._pt,\n\t        target = data.target,\n\t        tween = data.tween,\n\t        autoKill = data.autoKill,\n\t        xPrev = data.xPrev,\n\t        yPrev = data.yPrev,\n\t        isWin = data.isWin,\n\t        snap = data.snap,\n\t        snapInline = data.snapInline,\n\t        x,\n\t        y,\n\t        yDif,\n\t        xDif,\n\t        threshold;\n\n\t    while (pt) {\n\t      pt.r(ratio, pt.d);\n\t      pt = pt._next;\n\t    }\n\n\t    x = isWin || !data.skipX ? data.getX() : xPrev;\n\t    y = isWin || !data.skipY ? data.getY() : yPrev;\n\t    yDif = y - yPrev;\n\t    xDif = x - xPrev;\n\t    threshold = _config.autoKillThreshold;\n\n\t    if (data.x < 0) {\n\t      data.x = 0;\n\t    }\n\n\t    if (data.y < 0) {\n\t      data.y = 0;\n\t    }\n\n\t    if (autoKill) {\n\t      if (!data.skipX && (xDif > threshold || xDif < -threshold) && x < _max(target, \"x\")) {\n\t        data.skipX = 1;\n\t      }\n\n\t      if (!data.skipY && (yDif > threshold || yDif < -threshold) && y < _max(target, \"y\")) {\n\t        data.skipY = 1;\n\t      }\n\n\t      if (data.skipX && data.skipY) {\n\t        tween.kill();\n\t        data.vars.onAutoKill && data.vars.onAutoKill.apply(tween, data.vars.onAutoKillParams || []);\n\t      }\n\t    }\n\n\t    if (isWin) {\n\t      _window.scrollTo(!data.skipX ? data.x : x, !data.skipY ? data.y : y);\n\t    } else {\n\t      data.skipY || (target.scrollTop = data.y);\n\t      data.skipX || (target.scrollLeft = data.x);\n\t    }\n\n\t    if (snap && (ratio === 1 || ratio === 0)) {\n\t      y = target.scrollTop;\n\t      x = target.scrollLeft;\n\t      snapInline ? target.style.scrollSnapType = snapInline : target.style.removeProperty(\"scroll-snap-type\");\n\t      target.scrollTop = y + 1;\n\t      target.scrollLeft = x + 1;\n\t      target.scrollTop = y;\n\t      target.scrollLeft = x;\n\t    }\n\n\t    data.xPrev = data.x;\n\t    data.yPrev = data.y;\n\t    ScrollTrigger && ScrollTrigger.update();\n\t  },\n\t  kill: function kill(property) {\n\t    var both = property === \"scrollTo\",\n\t        i = this._props.indexOf(property);\n\n\t    if (both || property === \"scrollTo_x\") {\n\t      this.skipX = 1;\n\t    }\n\n\t    if (both || property === \"scrollTo_y\") {\n\t      this.skipY = 1;\n\t    }\n\n\t    i > -1 && this._props.splice(i, 1);\n\t    return !this._props.length;\n\t  }\n\t};\n\tScrollToPlugin.max = _max;\n\tScrollToPlugin.getOffset = _getOffset;\n\tScrollToPlugin.buildGetter = _buildGetter;\n\t_getGSAP() && gsap.registerPlugin(ScrollToPlugin);\n\n\texports.ScrollToPlugin = ScrollToPlugin;\n\texports.default = ScrollToPlugin;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n"],"names":["exports","gsap","_coreInitted","_window","_docEl","_body","_toArray","_config","ScrollTrigger","_windowExists","window","_getGSAP","registerPlugin","_isString","value","_isFunction","_max","element","axis","dim","scroll","client","Math","max","_buildGetter","e","p","pageXOffset","toUpperCase","_getOffset","container","getBoundingClientRect","console","warn","x","y","rect","isRoot","cRect","top","clientTop","pageYOffset","scrollTop","left","clientLeft","scrollLeft","offsets","_parseVal","target","currentVal","offset","isNaN","charAt","parseFloat","substr","min","_initCore","document","body","documentElement","utils","toArray","config","autoKillThreshold","ScrollToPlugin","version","name","rawVars","register","core","init","tween","index","targets","data","this","snapType","getProperty","isWin","nodeType","result","_clean","vars","autoKill","getX","getY","xPrev","yPrev","globals","set","scrollBehavior","snap","snapInline","style","scrollSnapType","add","offsetX","_props","push","skipX","offsetY","skipY","render","ratio","yDif","xDif","threshold","pt","_pt","r","d","_next","kill","onAutoKill","apply","onAutoKillParams","scrollTo","removeProperty","update","property","both","i","indexOf","splice","length","getOffset","buildGetter","default","Object","defineProperty","factory","HowlerGlobal","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","arguments","_clearSound","_interval","args","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","remCache","cache","on","events","off","isId","keys","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","safari","g","_super","_pos","_orientation","stereo","pan","pos","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner"],"sourceRoot":""}